



IReferenceArrayDatapin
======================

.. py:class:: IReferenceArrayDatapin
   :canonical: ansys.modelcenter.workflow.api.ireferencearraydatapin.IReferenceArrayDatapin



Bases: :py:obj:`ansys.modelcenter.workflow.api.idatapin.IDatapin`, :py:obj:`Sequence`\ [\ :py:obj:`ansys.modelcenter.workflow.api.idatapinreferencebase.IDatapinReferenceBase`\ ], :py:obj:`ansys.modelcenter.workflow.api.ireferenceproperty.IReferencePropertyManager`, :py:obj:`abc.ABC`


   Represents a reference array datapin on the workflow.

   Reference array datapins are different than other array datapin types.
   Reference arrays are only allowed to be one-dimensional, and their
   size cannot be changed by resetting their values.

   In particular, because reference arrays may refer to datapins of
   more than one type, getting their values is more complex than with
   other datapin types. Implementations of this interface
   implement ``IDatapin.get_state()`` and ``set_state`` methods in a manner that
   is intended mostly for convenience and feature parity with legacy
   ModelCenter APIs, but if you are attempting to work with reference
   arrays in particular, consider using the ``get_reference_value()`` and
   ``set_refererence_value()`` methods to query and manipulate the values of
   individual referenced datapins.















   ..
       !! processed by numpydoc !!














Overview
--------
.. py:currentmodule:: IReferenceArrayDatapin
.. tab-set::

    .. tab-item:: Abstract methods

        .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~get_reference_properties`
            - Get the reference properties on the reference datapin.
          * - :py:attr:`~set_length`
            - Resize the array.









Import detail
-------------

.. code-block:: python

    from ansys.modelcenter.workflow.api.ireferencearraydatapin import IReferenceArrayDatapin




Method detail
-------------
.. py:method:: get_reference_properties() -> Mapping[str, ansys.modelcenter.workflow.api.ireferenceproperty.IReferenceArrayProperty]
   :abstractmethod:

   
   Get the reference properties on the reference datapin.



   :Returns:

       :obj:`Mapping`\[:class:`python:str`, :obj:`IReferencePropertyBase`]
           Mapping of names to reference properties.













   ..
       !! processed by numpydoc !!

.. py:method:: set_length(new_size: int) -> None
   :abstractmethod:

   
   Resize the array.

   If smaller than the current size, elements at the end of the array are dropped.
   If larger than the current size, new empty elements are added to the end of the array.

   :Parameters:

       **new_size** : :class:`python:int`
           New size of the array.














   ..
       !! processed by numpydoc !!


