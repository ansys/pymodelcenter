# check spelling, codestyle
name: GitHub CI

# run only on main branch.  This avoids duplicated actions on PRs
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

jobs:
  style:
    name: Style Check
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: setup-git-credentials
        run: |
          git config --global url.https://${{ secrets.PHX_NIGHTLY_SECRET }}@github.com/Phoenix-Integration-Inc/phx-mocks.insteadOf https://github.com/Phoenix-Integration-Inc/phx-mocks
          git config --global url.https://${{ secrets.PHX_NIGHTLY_SECRET }}@github.com/pyansys/ansys-common-variableinterop.insteadOf https://github.com/pyansys/ansys-common-variableinterop
          git config --global url.https://${{ secrets.PHX_NIGHTLY_SECRET }}@github.com/pyansys/ansys-engineeringworkflow-api.insteadOf https://github.com/pyansys/ansys-engineeringworkflow-api

      - name: Install style requirements
        run: |
          pip install .[style] --disable-pip-version-check

      - name: Codespell
        run: |
          make codespell

      - name: flake8
        run: |
          make flake8 

  main:
    name: Build and Testing
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: setup-git-credentials
        run: |
          git config --global url.https://${{ secrets.PHX_NIGHTLY_SECRET }}@github.com/Phoenix-Integration-Inc/phx-mocks.insteadOf https://github.com/Phoenix-Integration-Inc/phx-mocks
          git config --global url.https://${{ secrets.PHX_NIGHTLY_SECRET }}@github.com/pyansys/ansys-common-variableinterop.insteadOf https://github.com/pyansys/ansys-common-variableinterop
          git config --global url.https://${{ secrets.PHX_NIGHTLY_SECRET }}@github.com/pyansys/ansys-engineeringworkflow-api.insteadOf https://github.com/pyansys/ansys-engineeringworkflow-api

      - name: Install dev dependencies
        run: pip install .[dev]

      - name: Run gRPC compiler
        run: protos/generate-proto.bat

      - name: Create wheel
        run: |
          pip install build
          python -m build --wheel

      - name: Validate wheel
        run: |
          pip install twine
          twine check dist/*

      - name: Install library, with test extra
        run: pip install .[test]

      - name: Unit testing
        run: |
          cd tests  # so we're testing the install, not local
          pytest -vx

      - name: Upload wheel
        uses: actions/upload-artifact@v2
        with:
          name: ansys-modelcenter-workflow-wheel
          path: dist/
          retention-days: 7

  docs:
    name: Build Documentation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: setup-git-credentials
        run: |
          git config --global url.https://${{ secrets.PHX_NIGHTLY_SECRET }}@github.com/Phoenix-Integration-Inc/phx-mocks.insteadOf https://github.com/Phoenix-Integration-Inc/phx-mocks
          git config --global url.https://${{ secrets.PHX_NIGHTLY_SECRET }}@github.com/pyansys/ansys-common-variableinterop.insteadOf https://github.com/pyansys/ansys-common-variableinterop
          git config --global url.https://${{ secrets.PHX_NIGHTLY_SECRET }}@github.com/pyansys/ansys-engineeringworkflow-api.insteadOf https://github.com/pyansys/ansys-engineeringworkflow-api

      - name: Install library, with docs extra
        run: |
          pip install poetry
          poetry install -E docs

      - name: Build HTML
        run: |
          poetry run make -C doc html SPHINXOPTS="-W"

#      - name: Build PDF Documentation
#        run: |
#          sudo apt update
#          sudo apt-get install -y texlive-latex-extra latexmk
#          poetry run make -C doc latexpdf

      - name: Upload HTML Documentation
        uses: actions/upload-artifact@v2
        with:
          name: Documentation-html
          path: doc/build/html
          retention-days: 7

#      - name: Upload PDF Documentation
#        uses: actions/upload-artifact@v2
#        with:
#          name: Documentation-pdf
#          path: doc/build/latex/*.pdf
#          retention-days: 7

      - name: Deploy to gh-pages
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@4.1.8
        with:
          BRANCH: gh-pages
          FOLDER: doc/build/html
          CLEAN: true
          single-commit: true

  Release:
    if: contains(github.ref, 'refs/tags')
    needs: [main, style, docs]
    runs-on: windows-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: ansys-modelcenter-workflow-wheel

#      - uses: actions/download-artifact@v2
#        with:
#          name: Documentation-pdf

      - uses: actions/download-artifact@v2
        with:
          name: Documentation-html
          path: ~/html

      # list current directory
      - name: List directory structure
        run: ls -R

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          BRANCH: gh-pages
          FOLDER: ~/html
          CLEAN: true

      # note how we use the PyPI tokens
      - name: Upload to Azure PyPi (disabled)
        run: |
          pip install twine
          # twine upload --skip-existing ./**/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./**/*.whl
            ./**/*.zip
            ./**/*.pdf
